$colorDark: #333;
$colorLight: orange;
$sizeW: 800px;
$sizeH: 600px;
$thickness: 5px;

@mixin reset {
    margin: 0;
    padding: 0;
}

body {
  background-color: $colorDark;
  @include reset;
}
.carousel {
    width: $sizeW;
    height: $sizeH;
    border: $thickness solid lighten($colorDark, 10%);
    
    .slide { 
      position: absolute;
      border: 1px solid green;
      width: inherit;
      height: inherit;

      @for $i from 1 through 5 {
      
          &:nth-child(#{$i}) {
            >div {
              background-image: url(img/slide-#{$i}.jpg);
            }
          }
        }
        
      @for $child from 1 through 5 {

          &:nth-child(#{$child})
          >div {
          box-sizing: border-box;
          width: $sizeW / 8;
          height: $sizeH / 6;
          border: 1px solid red;
          float: left;
      // &:nth-child(1) {
      //   >div {
      //     background-image: url(img/slide-1.jpg);
      //   }
      // }

      //   &:nth-child(2) {
      //     >div {
      //       background-image: url(img/slide-2.jpg);
      //   }
      // }
    
      //   >div {
      //       box-sizing: border-box;
      //       width: $sizeW / 8;
      //       height: $sizeH / 6;
      //       border: 1px solid red;
      //       float: left;
      //       background-image: url(img/slide-1.jpg);
         @for $y from 0 through 5   {
         @for $x from 0 through 7 {
            &:nth-child(#{$y * 8 + $x + 1 }) {
              background-position-x: $x * - $sizeW / 8;
              background-position-y: $y * - $sizeH / 6;
              
            //   opacity: 0;
            //   animation: effect-1 5s 1;
            //   animation-fill-mode: forwards;
            //   animation-delay: 0.5s * ($x + $y);
            // //   animation-delay: 0.5s * random(10);
            
            transform: translateX(-2 * -$sizeW) translateY(-2 * $sizeH) rotate(-1800deg);
            animation: effect-2 0.25s * random(5) 1;
            animation-fill-mode: forwards;
            animation-delay: 0.1s * random(10) + ($child - 1) * 4s;
        }
          }
        }


        }
    }
}

@keyframes effect-1 {
  from {
    opacity: 0;
  }

  to {
    opacity: 2;

  }
}

@keyframes effect-2 {
    from {
        transform: translateX(-2 * -$sizeW) translateY(-2 * $sizeH) rotate(-1800deg);
    }

    to {
        transform: translateX(0) translateY(0) rotate(0);
      }
    }
  }
